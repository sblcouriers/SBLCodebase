
!function ($) {
    "use strict";

    var calendarApp = function () {
        this.$body = $("body");
        this.$calendar = $('#calendar'),
            this.$event = ('#calendar-events div.calendar-events'),
            this.$categoryForm = $('#add-new-event form'),
            this.$extEvents = $('#calendar-events'),
            this.$modal = $('#my-event'),
            this.$saveCategoryBtn = $('.save-location'),
            this.$calendarObj = null;
    };


    /* on drop */
    calendarApp.prototype.onDrop = function (eventObj, date) {
        var $this = this;
        // retrieve the dropped element's stored Event Object
        var originalEventObject = eventObj.data('eventObject');
        var $categoryClass = eventObj.attr('data-class');
        // we need to copy it, so that multiple events don't have a reference to the same object
        var copiedEventObject = $.extend({}, originalEventObject);
        // assign it the date that was reported
        copiedEventObject.start = date;
        if ($categoryClass)
            copiedEventObject['className'] = [$categoryClass];
        // render the event on the calendar
        $this.$calendar.fullCalendar('renderEvent', copiedEventObject, true);
        // is the "remove after drop" checkbox checked?
        if ($('#drop-remove').is(':checked')) {
            // if so, remove the element from the "Draggable Events" list
            eventObj.remove();
        }
    },
    /* on click on event */
    calendarApp.prototype.onEventClick = function (calEvent, jsEvent, view) {
        var $this = this;
        var form = $("<form></form>");
        form.append("<label>Update Location</label>");
        form.append("<div class='input-group'><input class='form-control' type=text value='" + calEvent.title + "' /><span class='input-group-btn'><button type='submit' class='btn btn-success waves-effect waves-light'><i class='fa fa-check'></i> Save</button></span></div>");
        $this.$modal.modal({
            backdrop: 'static'
        });
        $this.$modal.find('.delete-event').show().end().find('.save-event').hide().end().find('.modal-body').empty().prepend(form).end().find('.delete-event').unbind('click').click(function () {
            $.ajax({
                url: '/admin/DeleteInductionCalendar?id=' + calEvent._id,
                type: "GET",
                dataType: "JSON",
                success: function (result) {
                    $this.$calendarObj.fullCalendar('removeEvents', function (ev) {
                        return (ev._id == calEvent._id);
                    });
                }
            });
            $this.$modal.modal('hide');
        });
        $this.$modal.find('form').on('submit', function () {
            calEvent.title = form.find("input[type=text]").val();
            console.log(calEvent);
            if (calEvent.title !== null && calEvent.title.length != 0) {
                $.ajax({
                    //url: '/admin/UpdateInductionCalendar?id=' + calEvent._id + "&location=" + calEvent.title,
                    url: '/admin/AddUpdateInductionCalendar',
                    type: "GET",
                    dataType: "JSON",
                    data: { 'id': calEvent._id, 'location': calEvent.title, 'timeStamp': 0 },
                    success: function (result) {
                        $this.$calendarObj.fullCalendar('updateEvent', calEvent);
                    }
                });
                $this.$modal.modal('hide');
            }
            $this.$modal.modal('hide');
            return false;
        });
    },
    /* on select */
    calendarApp.prototype.onSelect = function (start, end, allDay) {
        var $this = this;
        $this.$modal.modal({
            backdrop: 'static'
        });
        var form = $("<form></form>");
        form.append("<div class='row'></div>");
        form.find(".row")
            .append("<div class='col-md-12'><div class='form-group'><label class='control-label font-bold'>Location</label><input class='form-control' placeholder='Location' type='text' name='title'/></div></div>");

        $this.$modal.find('.delete-event').hide().end().find('.save-event').show().end().find('.modal-body').empty().prepend(form).end().find('.save-event').unbind('click').click(function () {
            form.submit();
        });
        $this.$modal.find('form').on('submit', function () {
            var location = form.find("input[name='title']").val();
            if (location !== null && location.length != 0) {
                $.ajax({
                    url: '/admin/AddUpdateInductionCalendar?id=0&location=' + location + "&timeStamp=" + start,
                    type: "GET",
                    dataType: "JSON",
                    success: function (result) {
                        console.log(result);
                        $this.$calendarObj.fullCalendar('renderEvent', {
                            title: location,
                            description:location,
                            start: start,
                            end: end,
                            allDay: false,
                            id: result.id,
                            className: ''
                        }, true);
                        $this.$modal.modal('hide');
                    }
                });
                $this.$modal.modal('hide');
            }
            else {
                alert('You have to give a title to your event');
            }
            return false;

        });
        $this.$calendarObj.fullCalendar('unselect');
    },
    calendarApp.prototype.enableDrag = function () {
        //init events
        $(this.$event).each(function () {
            // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
            // it doesn't need to have a start or end
            var eventObject = {
                title: $.trim($(this).text()) // use the element's text as the event title
            };
            // store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);
            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });
        });
    }
    /* Initializing */
    calendarApp.prototype.init = function () {
        this.enableDrag();
        /*  Initialize the calendar  */

        var $this = this;
        $this.$calendarObj = $this.$calendar.fullCalendar({
            slotDuration: '00:15:00', /* If we want to split day time each 15minutes */
            minTime: '08:00:00',
            maxTime: '19:00:00',
            defaultView: 'month',
            handleWindowResize: true,

            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            events: '/admin/InductionCalendarData',
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar !!!
            eventLimit: true, // allow "more" link when too many events
            selectable: true,
            eventRender: function (eventObj, $el) {
                $el.popover({
                    title: "Location",
                    content: eventObj.description,
                    trigger: 'hover',
                    placement: 'top',
                    container: 'body'
                });
            },
            drop: function (date) { $this.onDrop($(this), date); },
            select: function (start, end, allDay) { $this.onSelect(start, end, allDay); },
            eventClick: function (calEvent, jsEvent, view) { $this.onEventClick(calEvent, jsEvent, view); }

        });
    },

    //init CalendarApp
        $.CalendarApp = new calendarApp, $.CalendarApp.Constructor = calendarApp;

}(window.jQuery),

//initializing CalendarApp
function ($) {
    "use strict";
    $.CalendarApp.init();
}(window.jQuery);